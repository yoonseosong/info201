View(each_state)
each_state <- trends %>%
filter(year == 2012) %>%
select(state, year, total_pop, total_prison_pop)
View(each_state)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize("Number of physicians" = sum(total_mds, na.rm = T)) %>%
View(state_sum)
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize("Number of physicians" = sum(total_mds, na.rm = T))
View(state_sum)
dat %>%
group_by(health_sys_state) %>%
summarize("Number of physicians" = sum(total_mds, na.rm = T),
"Number of primary care physicians" = sum(prim_care_mds, na.rm = T),
"Number of medical groups" = sum(grp_cnt, na.rm = T),
"Number of hospitals" = sum(hosp_cnt, na.rm = T),
"Number of non-Federal general acute care hospitals" = sum(acutehosp_cnt, na.rm = T),
"Multistate system" = sum(sys_multistate, na.rm = T),
"Number of beds" = sum(sys_beds, na.rm = T),
"Number of discharges" = sum(sys_dsch, na.rm = T),
"Number of interns and residents" = sum(sys_res, na.rm = T)) %>%
mutate(fips = fips(health_sys_state))
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize("Number of physicians" = sum(total_mds, na.rm = T),
"Number of primary care physicians" = sum(prim_care_mds, na.rm = T),
"Number of medical groups" = sum(grp_cnt, na.rm = T),
"Number of hospitals" = sum(hosp_cnt, na.rm = T),
"Number of non-Federal general acute care hospitals" = sum(acutehosp_cnt, na.rm = T),
"Multistate system" = sum(sys_multistate, na.rm = T),
"Number of beds" = sum(sys_beds, na.rm = T),
"Number of discharges" = sum(sys_dsch, na.rm = T),
"Number of interns and residents" = sum(sys_res, na.rm = T)) %>%
mutate(fips = fips(health_sys_state))
View(state_sum)
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize("Number of physicians" = sum(total_mds, na.rm = T),
"Number of primary care physicians" = sum(prim_care_mds, na.rm = T),
"Number of medical groups" = sum(grp_cnt, na.rm = T),
"Number of hospitals" = sum(hosp_cnt, na.rm = T),
"Number of non-Federal general acute care hospitals" = sum(acutehosp_cnt, na.rm = T),
"Multistate system" = sum(sys_multistate, na.rm = T),
"Number of beds" = sum(sys_beds, na.rm = T),
"Number of discharges" = sum(sys_dsch, na.rm = T),
"Number of interns and residents" = sum(sys_res, na.rm = T)) %>%
mutate(fips = fips(health_sys_state))
state_shape <- map_data("state") %>%
rename(state = region) %>%
mutate(fips = fips(state)) %>%
left_join(state_sum, by = "fips")
View(state_shape)
runApp()
runApp()
?scale_fill_continuous
runApp()
runApp()
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = chosen_resource),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_gradient(low = "white", high = "blue") +
labs(title = chosen_resource,
fill = chosen_resource)
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = "Physicians"),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_gradient(low = "white", high = "blue") +
labs(title = chosen_resource,
fill = chosen_resource)
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = "Physicians"),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_gradient(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = "Physicians"),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = as.numeric("Physicians")),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = ("Physicians")),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = ("Physicians")),
color = "black",
size = 0.1
) +
coord_map() +
#scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
View(state_shape)
View(each_state)
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = prison_pop),
color = "white",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "#132B43", high = "red") +
labs(title = "Prison Population in 2012",
fill = "Prison Population")
state_shape <- map_data("state") %>%
rename(state = region) %>%
mutate(fips = fips(state)) %>%
left_join(each_state, by = "fips")
each_state <- trends %>%
filter(year == 2012) %>%
select(state, year, total_pop, total_prison_pop) %>%
group_by(state) %>%
summarize(prison_pop = sum(total_prison_pop, na.rm = T)) %>%
mutate(fips = fips(state))
state_shape <- map_data("state") %>%
rename(state = region) %>%
mutate(fips = fips(state)) %>%
left_join(each_state, by = "fips")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = prison_pop),
color = "white",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "#132B43", high = "red") +
labs(title = "Prison Population in 2012",
fill = "Prison Population")
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize("Physicians" = sum(total_mds, na.rm = T) + 0.1,
"Primary care physicians" = sum(prim_care_mds, na.rm = T),
"Medical groups" = sum(grp_cnt, na.rm = T),
"Hospitals" = sum(hosp_cnt, na.rm = T),
"Non-Federal general acute care hospitals" = sum(acutehosp_cnt, na.rm = T),
"Multistate system" = sum(sys_multistate, na.rm = T),
"Beds" = sum(sys_beds, na.rm = T),
"Discharges" = sum(sys_dsch, na.rm = T),
"Interns and residents" = sum(sys_res, na.rm = T)) %>%
mutate(fips = fips(health_sys_state))
state_shape <- map_data("state") %>%
rename(state = region) %>%
mutate(fips = fips(state)) %>%
left_join(state_sum, by = "fips")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = ("Physicians")),
color = "black",
size = 0.1
) +
coord_map() +
#scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = ("Physicians")),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize("Physicians" = sum(total_mds, na.rm = T),
"Primary care physicians" = sum(prim_care_mds, na.rm = T),
"Medical groups" = sum(grp_cnt, na.rm = T),
"Hospitals" = sum(hosp_cnt, na.rm = T),
"Non-Federal general acute care hospitals" = sum(acutehosp_cnt, na.rm = T),
"Multistate system" = sum(sys_multistate, na.rm = T),
"Beds" = sum(sys_beds, na.rm = T),
"Discharges" = sum(sys_dsch, na.rm = T),
"Interns and residents" = sum(sys_res, na.rm = T)) %>%
mutate(fips = fips(health_sys_state))
state_shape <- map_data("state") %>%
rename(state = region) %>%
mutate(fips = fips(state)) %>%
left_join(state_sum, by = "fips")
View(state_shape)
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = ("Physicians")),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = Physicians),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = Medical groups),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = "Medical groups"),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
colnames(state_shape)
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = Beds),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = beds),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize(physicians = sum(total_mds, na.rm = T),
primary_care_physicians = sum(prim_care_mds, na.rm = T),
medical_groups = sum(grp_cnt, na.rm = T),
hospitals = sum(hosp_cnt, na.rm = T),
non-Federal_general_acute_care_hospitals = sum(acutehosp_cnt, na.rm = T),
multistate_system = sum(sys_multistate, na.rm = T),
beds = sum(sys_beds, na.rm = T),
discharges = sum(sys_dsch, na.rm = T),
interns_and_residents = sum(sys_res, na.rm = T)) %>%
mutate(fips = fips(health_sys_state))
state_shape <- map_data("state") %>%
rename(state = region) %>%
mutate(fips = fips(state)) %>%
left_join(state_sum, by = "fips")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = beds),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
View(state_shape)
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize(physicians = sum(total_mds, na.rm = T),
primary_care_physicians = sum(prim_care_mds, na.rm = T),
medical_groups = sum(grp_cnt, na.rm = T),
hospitals = sum(hosp_cnt, na.rm = T),
non-Federal_general_acute_care_hospitals = sum(acutehosp_cnt, na.rm = T),
multistate_system = sum(sys_multistate, na.rm = T),
beds = sum(sys_beds, na.rm = T),
discharges = sum(sys_dsch, na.rm = T),
interns_and_residents = sum(sys_res, na.rm = T)) %>%
mutate(fips = fips(health_sys_state))
state_shape <- map_data("state") %>%
rename(state = region) %>%
mutate(fips = fips(state)) %>%
left_join(state_sum, by = "fips")
View(dat)
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize(physicians = sum(total_mds, na.rm = T),
primary_care_physicians = sum(prim_care_mds, na.rm = T),
medical_groups = sum(grp_cnt, na.rm = T),
hospitals = sum(hosp_cnt, na.rm = T),
non-Federal_general_acute_care_hospitals = sum(acutehosp_cnt, na.rm = T),
multistate_system = sum(sys_multistate, na.rm = T),
beds = sum(sys_beds, na.rm = T),
discharges = sum(sys_dsch, na.rm = T),
interns_and_residents = sum(sys_res, na.rm = T)) %>%
mutate(fips = fips(health_sys_state))
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize(physicians = sum(total_mds, na.rm = T),
primary_care_physicians = sum(prim_care_mds, na.rm = T),
medical_groups = sum(grp_cnt, na.rm = T),
hospitals = sum(hosp_cnt, na.rm = T)
)
View(state_sum)
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize(physicians = sum(total_mds, na.rm = T),
primary_care_physicians = sum(prim_care_mds, na.rm = T),
medical_groups = sum(grp_cnt, na.rm = T),
hospitals = sum(hosp_cnt, na.rm = T),
non-Federal_general_acute_care_hospitals = sum(acutehosp_cnt, na.rm = T),
multistate_system = sum(sys_multistate, na.rm = T),
beds = sum(sys_beds, na.rm = T),
discharges = sum(sys_dsch, na.rm = T),
interns_and_residents = sum(sys_res, na.rm = T))
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize(physicians = sum(total_mds, na.rm = T),
primary_care_physicians = sum(prim_care_mds, na.rm = T),
medical_groups = sum(grp_cnt, na.rm = T),
hospitals = sum(hosp_cnt, na.rm = T),
non_Federal_general_acute_care_hospitals = sum(acutehosp_cnt, na.rm = T),
multistate_system = sum(sys_multistate, na.rm = T),
beds = sum(sys_beds, na.rm = T),
discharges = sum(sys_dsch, na.rm = T),
interns_and_residents = sum(sys_res, na.rm = T))
state_sum <- dat %>%
group_by(health_sys_state) %>%
summarize(physicians = sum(total_mds, na.rm = T),
primary_care_physicians = sum(prim_care_mds, na.rm = T),
medical_groups = sum(grp_cnt, na.rm = T),
hospitals = sum(hosp_cnt, na.rm = T),
non_Federal_general_acute_care_hospitals = sum(acutehosp_cnt, na.rm = T),
multistate_system = sum(sys_multistate, na.rm = T),
beds = sum(sys_beds, na.rm = T),
discharges = sum(sys_dsch, na.rm = T),
interns_and_residents = sum(sys_res, na.rm = T)) %>%
mutate(fips = fips(health_sys_state))
state_shape <- map_data("state") %>%
rename(state = region) %>%
mutate(fips = fips(state)) %>%
left_join(state_sum, by = "fips")
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = beds),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
mymap
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = non_Federal_general_acute_care_hospitals),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = "chosen_resource",
fill = "chosen_resource")
runApp()
runApp()
chosen_resource <- "beds"
mymap <- ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = as.symbol(chosen_resource)),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = chosen_resource,
fill = chosen_resource)
mymap
chosen_resource
as.symbol(chosen_resource)
test <- beds
test <- "beds"
state_shape$test
state_shape$as.symbol(test)
state_shape[[test]]
chosen_resource <- "beds"
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = [[chosen_resource]]),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = chosen_resource,
fill = chosen_resource)
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = [[chosen_resource]]),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = chosen_resource,
fill = chosen_resource)
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = state_shape[[chosen_resource]]),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = chosen_resource,
fill = chosen_resource)
chosen_resource <- "physicians"
mymap <- ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = state_shape[[chosen_resource]]),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = chosen_resource,
fill = chosen_resource)
mymap
ggplot(state_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = .data[[chosen_resource]]),
color = "black",
size = 0.1
) +
coord_map() +
scale_fill_continuous(low = "white", high = "blue") +
labs(title = chosen_resource,
fill = chosen_resource)
runApp()
runApp()
runApp()
runApp()
choice_name <- c("Number of physicians", "Number of primary care physicians",
"Number of medical groups", "Number of hospitals",
"Number of non-Federal general acute care hospitals",
"Multistate system", "Number of beds", "Number of discharges",
"Number of interns and residents")
code_name <- c("physicians", "primary_care_physicians", "medical_groups",
"hospitals", "non_federal_general_acute_care_hospitals",
"multistate_system", "beds", "discharges", "interns_and_residents")
column_names <- data.frame(choice_name, code_name)
View(column_names)
column_names[["Number of beds"]]
column_names[[Number of beds]]
get("Number of beds")
column_names$code_name[["Number of beds"]]
column_names["Number of beds", ]
column_names$choice_name
column_names$code_name["Number of beds", ]
column_names$code_name["Number of beds"]
column_names$code_name[choice_name == "Number of beds"]
test <- "Number of interns and residents"
column_names$code_name[choice_name == test]
runApp()
runApp()
runApp()
shiny::runApp()
